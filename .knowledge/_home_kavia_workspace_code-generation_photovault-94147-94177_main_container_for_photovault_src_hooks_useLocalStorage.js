{"is_source_file": true, "format": "JavaScript", "description": "A custom React hook for persisting state in localStorage, allowing components to store and retrieve data across sessions.", "external_files": ["react", "window.localStorage"], "external_methods": ["useState", "useEffect", "window.localStorage.getItem", "window.localStorage.setItem", "window.localStorage.removeItem"], "published": ["useLocalStorage"], "classes": [], "methods": [{"name": "useLocalStorage", "description": "A React hook that synchronizes state with localStorage, initializing from localStorage if available, and updating localStorage on state change."}], "calls": ["useState", "useEffect", "window.localStorage.getItem", "window.localStorage.setItem", "window.localStorage.removeItem", "JSON.parse", "JSON.stringify", "console.error"], "search-terms": ["custom hook", "localStorage persistence", "useLocalStorage", "React hook", "state synchronization"], "state": 2, "file_id": 39, "knowledge_revision": 80, "git_revision": "88a59cb3afb849a5e9bb722a2e2fe0928c779127", "ctags": [{"_type": "tag", "name": "setStoredValue", "path": "/home/kavia/workspace/code-generation/photovault-94147-94177/main_container_for_photovault/src/hooks/useLocalStorage.js", "pattern": "/^  const [storedValue, setStoredValue] = useState(() => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "useLocalStorage", "path": "/home/kavia/workspace/code-generation/photovault-94147-94177/main_container_for_photovault/src/hooks/useLocalStorage.js", "pattern": "/^const useLocalStorage = (key, initialValue) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/code-generation/photovault-94147-94177/main_container_for_photovault/src/hooks/useLocalStorage.js", "hash": "c7e6e42d5d68a791b225ee324fe6af93", "format-version": 4, "code-base-name": "default", "revision_history": [{"80": "88a59cb3afb849a5e9bb722a2e2fe0928c779127"}]}